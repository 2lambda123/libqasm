# Implementation for the abstract syntax tree node classes
source

# Header file for the abstract syntax tree node classes
header "v3x/cqasm-ast-gen.hpp"

// Include tree base classes.
include "cqasm-tree.hpp"
tree_namespace cqasm::tree

// Include primitive types.
include "v3x/cqasm-primitives.hpp"
import cqasm.v3x.primitives

// Initialization function to use to construct default values for the tree base classes and primitives
initialize_function cqasm::v3x::primitives::initialize
serdes_functions cqasm::v3x::primitives::serialize cqasm::v3x::primitives::deserialize


# Namespace for the abstract syntax tree node classes
namespace cqasm
namespace v3x
namespace ast

index_entry {
    # Zero based
    index_item {
        index: One<expression>;
    }

    # Inclusive
    index_range {
        first: One<expression>;
        last: One<expression>;
    }
}

index_list {
    items: Many<index_entry>;
}

expression {
    integer_literal {
        value: cqasm::v3x::primitives::Int;
    }

    float_literal {
        value: cqasm::v3x::primitives::Real;
    }

    identifier {
        name: cqasm::v3x::primitives::Str;
    }

    index {
        expr: One<expression>;
        indices: One<index_list>;
    }
}

expression_list {
    items: Any<expression>;
}

statement {
    variable {
        name: One<identifier>;
        typ: One<identifier>;
        size: Maybe<integer_literal>;
    }

    instruction {
        name: One<identifier>;
        operands: One<expression_list>;
    }

    measurement_instruction {
        bits: One<expression>;
        qubits: One<expression>;
    }
}

statement_list {
    items: Any<statement>;
}

version {
    items: cqasm::v3x::primitives::Version;
}

root {
    program {
        version: One<version>;
        statements: One<statement_list>;
    }
}
